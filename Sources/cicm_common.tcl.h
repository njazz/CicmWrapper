// this is autogenerated file: do not edit
// clang-format off
#ifndef cicm_common_tcl_h_
#define cicm_common_tcl_h_
const char* cicm_common_tcl = 
"proc eobj_canvas_motion {patcher val} {\n"
"    set rx [winfo rootx $patcher]\n"
"    set ry [winfo rooty $patcher]\n"
"    set x  [winfo pointerx .]\n"
"    set y  [winfo pointery .]\n"
"    pdtk_canvas_motion $patcher [expr $x - $rx] [expr $y - $ry] $val\n"
"}\n"
"proc eobj_canvas_down {patcher val} {\n"
"    set rx [winfo rootx $patcher]\n"
"    set ry [winfo rooty $patcher]\n"
"    set x  [winfo pointerx .]\n"
"    set y  [winfo pointery .]\n"
"    pdtk_canvas_mouse $patcher [expr $x - $rx] [expr $y - $ry] 0 $val\n"
"}\n"
"proc eobj_canvas_up {patcher} {\n"
"    set rx [winfo rootx $patcher]\n"
"    set ry [winfo rooty $patcher]\n"
"    set x  [winfo pointerx .]\n"
"    set y  [winfo pointery .]\n"
"    pdtk_canvas_mouseup $patcher [expr $x - $rx] [expr $y - $ry] 0\n"
"}\n"
"proc eobj_canvas_right {patcher} {\n"
"    set rx [winfo rootx $patcher]\n"
"    set ry [winfo rooty $patcher]\n"
"    set x  [winfo pointerx .]\n"
"    set y  [winfo pointery .]\n"
"    pdtk_canvas_rightclick $patcher [expr $x - $rx] [expr $y - $ry] 0\n"
"}\n"
"proc eobj_saveas {name initialfile initialdir} {\n"
"    if { ! [file isdirectory $initialdir]} {set initialdir $::env(HOME)}\n"
"    set filename [tk_getSaveFile -initialfile $initialfile -initialdir $initialdir -filetypes $::filetypes]\n"
"    if {$filename eq \"\"}\n"
"        return;\n"
"    set extension [file extension $filename]\n"
"    set oldfilename $filename\n"
"    if {$filename ne $oldfilename && [file exists $filename]} {\n"
"        set answer [tk_messageBox -type okcancel -icon question -default cancel-message [_ \"$filename\" already exists. Do you want to replace it?]]\n"
"        if {$answer eq \"cancel\"}\n"
"            return;\n"
"    }\n"
"    set dirname [file dirname $filename]\n"
"    set basename [file tail $filename]\n"
"    pdsend \"$name eobjwriteto [enquote_path $dirname/$basename]\"\n"
"    set ::filenewdir $dirname\n"
"}\n"
"proc eobj_openfrom {name} {\n"
"    if { ! [file isdirectory $::filenewdir]} {\n"
"    set ::filenewdir [file normalize $::env(HOME)]\n"
"    }\n"
"    set files [tk_getOpenFile -multiple false -initialdir $::fileopendir]\n"
"    pdsend \"$name eobjreadfrom [enquote_path $files]\"\n"
"}\n"
"proc eobj_rgba_to_hex {red green blue alpha} {\n"
"    set nR [expr int( $red * 65025 )]\n"
"    set nG [expr int( $green * 65025 )]\n"
"    set nB [expr int( $blue * 65025 )]\n"
"    set col [format {%4.4x} $nR]\n"
"    append col [format {%4.4x} $nG]\n"
"    append col [format {%4.4x} $nB]\n"
"    return #$col\n"
"}\n"
"proc eobj_rgb_int_to_float {red green blue} {\n"
"    set nR [expr ( $red / 65025. )]\n"
"    set nG [expr ( $green / 65025. )]\n"
"    set nB [expr ( $blue / 65025. )]\n"
"    if {$nR > 1.} {set nR 1.}\n"
"    if {$nG > 1.} {set nG 1.}\n"
"    if {$nB > 1.} {set nB 1.}\n"
"    return [concat $nR $nG $nB]\n"
"}\n"
"proc ceammc_create_label_font_bold {font_name} {\n"
"    set font [ttk::style lookup TLabel -font]\n"
"    set family [font configure $font -family]\n"
"    set size [font configure $font -size]\n"
"    set slant [font configure $font -slant]\n"
"    set underline [font configure TkDefaultFont -underline]\n"
"    return [font create $font_name -family $family -size $size -weight bold -slant $slant -underline $underline]\n"
"}\n"
"proc ceammc_category_icon {state} {\n"
"    if {$state ne 0} {\n"
"        return ceammc_image_category_opened\n"
"    } {\n"
"        return ceammc_image_category_closed\n"
"    }\n"
"}\n"
"proc ceammc_category_apply {id var_name_state controls} {\n"
"    global $var_name_state\n"
"    set v [expr $$var_name_state]\n"
"    $id configure -image [ceammc_category_icon $v]\n"
"    foreach w $controls {\n"
"        if {$v eq 0 } {\n"
"            grid remove $w\n"
"        } {\n"
"            grid config $w\n"
"        }\n"
"    }\n"
"}\n"
"proc ceammc_category_toggle {id var_name_state controls} {\n"
"    global $var_name_state\n"
"    set v [expr $$var_name_state]\n"
"    if {$v ne 0} { set $var_name_state 0 } { set $var_name_state 1 }\n"
"    ceammc_category_apply $id $var_name_state $controls\n"
"}\n"
"image create photo ceammc_image_category_opened -width 18 -height 18 \\\n"
"    -data \"iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAAQklEQVR4AWMYDoAFnYcJNBnuMFjDebYMtxk0MBVJMtxg+MxgA1XyBciTBLMxlQElbfAoQShDKMGjDKYErzIgHFEAAGLzEOwIrN0jAAAAAElFTkSuQmCC\"\n"
"image create photo ceammc_image_category_closed -width 18 -height 18 \\\n"
"    -data \"iVBORw0KGgoAAAANSUhEUgAAABIAAAASCAQAAAD8x0bcAAAAPUlEQVR4AWMY9ICNoZCBlZAiH4b/DGsIK8sjTlkBccoqgcqW41fCy3CE4Q9DKO2UIIArw3egEoJAkmGIAABqKxDmokl7sAAAAABJRU5ErkJggg==\"\n"
"ceammc_create_label_font_bold CICMCategoryFont\n"
"package require tooltip\n"
;
#endif
// clang-format on
